---
AWSTemplateFormatVersion: 2010-09-09
Description: Pipeline for mitt helsingborg form builder production/stage

Parameters:
  ProductionAccount:
    Description: AWS AccountNumber for Production
    Type: AWS::SSM::Parameter::Value<String>
    Default: mitt-hbg-aws-account-id-production
  StageAccount:
    Description: AWS AccountNumber for Stage
    Type: AWS::SSM::Parameter::Value<String>
    Default: mitt-hbg-aws-account-id-stage
  ProductionDomain:
    Description: AWS Domain for Production
    Type: AWS::SSM::Parameter::Value<String>
    Default: mitt-hbg-form-builder-domain-production
  StageDomain:
    Description: AWS Domain for Stage
    Type: AWS::SSM::Parameter::Value<String>
    Default: mitt-hbg-form-builder-domain-stage
  ProductionAPIDomain:
    Description: AWS Domain for API Production
    Type: AWS::SSM::Parameter::Value<String>
    Default: mitt-hbg-api-domain-production
  StageAPIDomain:
    Description: AWS Domain for API Stage
    Type: AWS::SSM::Parameter::Value<String>
    Default: mitt-hbg-api-domain-stage
  GitHubOwner:
    Description: Owner of the repository.
    Type: String
    Default: helsingborg-stad
  GitHubRepo:
    Description: Repository Name.
    Type: String
    Default: mitt-helsingborg-form-builder
  GitHubBranch:
    Description: Branch name.
    Type: String
    Default: master
Resources:
  ##
  # CodeBuild
  ##
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-CodeBuildProject
      Description: !Sub ${AWS::StackName}-CodeBuildProject
      EncryptionKey: !GetAtt KMSKey.Arn
      ServiceRole: !GetAtt IAMRoleBuildProject.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: .deploy/cloudformation/pipelines/production/buildspec.yml
      Cache:
        Location: !Sub "${S3BucketArtifact}/cache"
        Type: S3

  ##
  # CodePipeline
  ##
  CodePipelinePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: IAMPolicyPipeline
    Properties:
      ArtifactStore:
        Location: !Ref S3BucketArtifact
        Type: "S3"
        EncryptionKey:
          Id: !GetAtt KMSKey.KeyId
          Type: KMS
      RoleArn: !GetAtt IAMRolePipeline.Arn
      Name: !Sub ${AWS::StackName}-Pipeline
      Stages:
        - Name: GetSource
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: 
                  Fn::ImportValue: github-connection-CodeStarConnection
                FullRepositoryId: !Sub "${GitHubOwner}/${GitHubRepo}"
                BranchName: !Ref GitHubBranch
                OutputArtifactFormat: CODE_ZIP
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Stage
          Actions:
            -
              Name: DeployStageResources
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              RunOrder: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                ChangeSetName: mitt-helsingborg-form-builder-stage-changeset
                StackName: mitt-helsingborg-form-builder-stage
                ParameterOverrides: !Sub | 
                  {
                    "BucketName" : "${StageDomain}"
                  }
                TemplatePath: 'SourceOutput::.deploy/cloudformation/resources/stack.yml'
                RoleArn: !Sub arn:aws:iam::${StageAccount}:role/CloudformationDeployRole
              InputArtifacts:
                - Name: SourceOutput
              RoleArn: !Sub arn:aws:iam::${StageAccount}:role/PipelineRole
            -
              Name: DeployStage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Sub ${AWS::StackName}-CodeBuildProject
                EnvironmentVariables: !Sub |
                  [
                    {
                      "name": "AWS_ACCOUNT_NBR",
                      "value": "${StageAccount}"
                    },
                    {
                      "name": "BUCKET_NAME",
                      "value": "${StageDomain}"
                    },
                    {
                      "name": "API_DOMAIN",
                      "value": "${StageAPIDomain}"
                    },
                    {
                      "name": "ENV",
                      "value": "stage"
                    }
                  ]
              InputArtifacts: 
                - 
                  Name: SourceOutput
              RunOrder: 2
        - Name: Production
          Actions:
            -
              Name: Approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: "1"
                Provider: Manual
              RunOrder: 1
            -
              Name: DeployProductionResources
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              RunOrder: 2
              Configuration:
                ActionMode: CREATE_UPDATE
                ChangeSetName: mitt-helsingborg-form-builder-production-changeset
                StackName: mitt-helsingborg-form-builder-production
                ParameterOverrides: !Sub | 
                  {
                    "BucketName" : "${ProductionDomain}"
                  }
                TemplatePath: 'SourceOutput::.deploy/cloudformation/resources/stack.yml'
                RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/CloudformationDeployRole
              InputArtifacts:
                - Name: SourceOutput
              RoleArn: !Sub arn:aws:iam::${ProductionAccount}:role/PipelineRole
            -
              Name: DeployProduction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Sub ${AWS::StackName}-CodeBuildProject
                EnvironmentVariables: !Sub |
                  [
                    {
                      "name": "AWS_ACCOUNT_NBR",
                      "value": "${ProductionAccount}"
                    },
                    {
                      "name": "BUCKET_NAME",
                      "value": "${ProductionDomain}"
                    },
                    {
                      "name": "API_DOMAIN",
                      "value": "${ProductionAPIDomain}"
                    },
                    {
                      "name": "ENV",
                      "value": "production"
                    }
                  ]
              InputArtifacts: 
                - 
                  Name: SourceOutput
              RunOrder: 3



  ##
  # IAM
  ##
  IAMRoleBuildProject:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-CodebuildRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  IAMPolicyBuildProject:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-CodebuildPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:*
            Resource:
              - !Sub arn:aws:s3:::${S3BucketArtifact}/*
              - !Sub arn:aws:s3:::${S3BucketArtifact}
          -
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt KMSKey.Arn
          -
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Sid: iam
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${StageAccount}:role/ServerlessDeployRole
              - !Sub arn:aws:iam::${ProductionAccount}:role/ServerlessDeployRole
          - Sid: codestarconnection
            Effect: Allow
            Action:
              - codestar-connections:UseConnection
            Resource:
              - Fn::ImportValue: github-connection-CodeStarConnection
      Roles:
        - !Ref IAMRoleBuildProject

  IAMRolePipeline:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-CodepipelineRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  IAMPolicyPipeline:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AWS::StackName}-CodepipelinePolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: codebuild
            Effect: Allow
            Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Resource:
              - !GetAtt CodeBuildProject.Arn
          - Sid: general
            Effect: Allow
            Action:
              - iam:ListRoles
              - iam:PassRole
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:*"
          - Sid: kms
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt KMSKey.Arn
          - Sid: s3
            Effect: Allow
            Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:GetObject
              - s3:GetObjectAcl
            Resource:
              - !Sub arn:aws:s3:::${S3BucketArtifact}/*
              - !Sub arn:aws:s3:::${S3BucketArtifact}
          - Sid: iam
            Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !Sub arn:aws:iam::${StageAccount}:role/PipelineRole
              - !Sub arn:aws:iam::${ProductionAccount}:role/PipelineRole
          - Sid: codestarconnection
            Effect: Allow
            Action:
              - codestar-connections:UseConnection
            Resource:
              - Fn::ImportValue: github-connection-CodeStarConnection
      Roles:
        - !Ref IAMRolePipeline


  ##
  # KMS
  ##
  KMSKey:
    DependsOn: IAMRolePipeline
    Type: AWS::KMS::Key
    Properties:
      Description: Used by Assumed Roles in different accounts to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Id: Key
        Statement:
          -
            Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: "*"
          -
            Sid: Allow use of the key for CryptoGraphy Lambda
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-CodepipelineRole
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-CodebuildRole
                - !Sub arn:aws:iam::${StageAccount}:role/PipelineRole
                - !Sub arn:aws:iam::${ProductionAccount}:role/PipelineRole
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"

  KMSAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}-xaccounts
      TargetKeyId: !Ref KMSKey

  ##
  # S3
  ##
  S3BucketArtifact:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      VersioningConfiguration:
        Status: Enabled

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketArtifact
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource:
              - !Sub arn:aws:s3:::${S3BucketArtifact}
              - !Sub arn:aws:s3:::${S3BucketArtifact}/*
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-CodepipelineRole
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-CodebuildRole
                - !Sub arn:aws:iam::${StageAccount}:role/PipelineRole
                - !Sub arn:aws:iam::${ProductionAccount}:role/PipelineRole